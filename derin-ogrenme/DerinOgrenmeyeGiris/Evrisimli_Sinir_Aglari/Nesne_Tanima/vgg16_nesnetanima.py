# -*- coding: utf-8 -*-
"""VGG16_NesneTanima.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xDOGjd8BHoRn-gvpVO8JS-ZPf6CHZhNl

# **IMAGENET - VGG16 - NESNE TANIMA**


---
[<img align="right" width="100" height="100" src="http://www.i2symbol.com/images/symbols/style-letters/circled_latin_capital_letter_a_u24B6_icon_128x128.png">](https://www.ayyucekizrak.com/)

**Colab** için kimlik doğrulama adımları:
"""

!kill -9 -1

from google.colab import drive
drive.mount('/content/drive/')

"""**Google Drive** içinde ve doğru klasörde bulunmamız için gereken ve kontrol adımları:"""

!mkdir -p drive
!google-drive-ocamlfuse drive
!ls

import os
os.chdir("/content/drive/My Drive/Udemy_DerinOgrenmeyeGiris/Evrisimli_Sinir_Aglari/Nesne_Tanima")
!pwd

!ls "/content/drive/My Drive/Udemy_DerinOgrenmeyeGiris/Evrisimli_Sinir_Aglari/Nesne_Tanima/images"

!ls images

"""### Kütüphane Kurulumu"""

!pip3 install -q keras

"""**ImageNet projesi, görsel nesne tanıma yazılımı araştırmasında kullanılmak üzere tasarlanmış geniş bir görsel veritabanıdır.**

*On milyondan fazla etiketli resim bulunmaktadır.*

**ImageNet veri setinde önceden eğitilmiş bir modeli göreceğiz. 16 katmanlı VGG Net (VGG16) modelini kullanacağız**


![alt text](https://github.com/hnarayanan/artistic-style-transfer/raw/05c95e5ac7001201d1ae9bf734a9224cf3445388/notebooks/images/imagenet-sample.jpg)

**Keras kütüphanesinden import edilmesi gerekenler: VGG16 eğitilmiş modeli**
"""

import numpy as np
from PIL import Image

from keras.applications.vgg16 import VGG16
from keras.applications.vgg16 import preprocess_input, decode_predictions

"""**Keras'ta önceden ImageNet veri kümesinde eğitilmiş  bir modeli yükleme **"""

model = VGG16(weights='imagenet', include_top=True)

"""**Model yapısına bir göz atalım**: Hangi katmanlar var ve katmanların özellikleri neler..."""

layers = dict([(layer.name, layer.output) for layer in model.layers])
layers

"""**Toplam parametre sayısı da bize fikir verebilir**"""

model.count_params() # Biraz çok!

"""**Drive da bulunduğumuz klasörün içindeki test görüntülerimizin dosya isimlerini görelim ve test işlemi için bu görselleri çağıralım**"""

import os
os.chdir("/content/drive/My Drive/Udemy_DerinOgrenmeyeGiris/Evrisimli_Sinir_Aglari/Nesne_Tanima/images")
!pwd

!ls "/content/drive/My Drive/Udemy_DerinOgrenmeyeGiris/Evrisimli_Sinir_Aglari/Nesne_Tanima/images"

"""**Bir test resmi yükleyelim ve ön işlemler yapalım**

*   f16
*   inek
*  Van kedisi
*  Olips
"""

image_path =  'f16.jpg'
image = Image.open(image_path)
image = image.resize((224, 224))
image

# Görüntüyü diziye çevir
x = np.asarray(image, dtype='float32')
# Dizi listesine çevir
x = np.expand_dims(x, axis=0)
# Giriş görüntüsünü eğitim setine uygun şekilde ön işlemleri yap 
x = preprocess_input(x)

"""### **TEST GÖRÜNTÜSÜ İLE SINIFLAMA YAPMA**
<img align="left" width="200" height="200" src="https://cloud.githubusercontent.com/assets/532272/21507867/3376e9fe-cc4a-11e6-9350-7ec4f680da36.gif">
"""

preds = model.predict(x)
print('Predicted:', decode_predictions(preds, top=3)[0])
print(decode_predictions(preds, top=1)[0][0][1])

