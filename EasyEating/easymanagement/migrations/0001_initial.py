# Generated by Django 5.1.4 on 2024-12-08 11:42

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('telephone', models.CharField(max_length=30)),
                ('adress', models.TextField(null=True)),
                ('isActive', models.BooleanField()),
                ('registerDate', models.DateField(auto_now=True)),
                ('slug', models.SlugField(blank=True, default='', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Produce',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75)),
                ('price', models.DecimalField(decimal_places=2, max_digits=11, null=True)),
                ('image', models.ImageField(null=True, upload_to='img')),
                ('description', models.TextField(default='')),
                ('slug', models.SlugField(blank=True, default='', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='EEUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('image', models.ImageField(null=True, upload_to='img')),
                ('is_manager', models.BooleanField(default=0)),
                ('is_desk', models.BooleanField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('business', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='easymanagement.business')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Desk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('isReserve', models.BooleanField(default=False)),
                ('isActive', models.BooleanField(default=True)),
                ('slug', models.SlugField(blank=True, default='', unique=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='easymanagement.business')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('isConfirm', models.BooleanField(default=False)),
                ('isActive', models.BooleanField(default=True)),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('desk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='easymanagement.desk')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('isActive', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('preparing', 'Hazırlanıyor'), ('serving', 'Servis Edildi'), ('completed', 'Tamamlandı')], default='preparing', max_length=20)),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('desk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='easymanagement.desk')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=11)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('is_successful', models.BooleanField(default=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='easymanagement.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('quantity', models.IntegerField(default=1)),
                ('isRead', models.BooleanField(default=False)),
                ('is_service', models.BooleanField(default=False)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='easymanagement.order')),
                ('produce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='easymanagement.produce')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='produces',
            field=models.ManyToManyField(through='easymanagement.OrderItem', to='easymanagement.produce'),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('isConfirm', models.BooleanField(default=False)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='easymanagement.cart')),
                ('produce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='easymanagement.produce')),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='produces',
            field=models.ManyToManyField(through='easymanagement.CartItem', to='easymanagement.produce'),
        ),
        migrations.CreateModel(
            name='ProduceStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('piece', models.IntegerField()),
                ('produce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='easymanagement.produce')),
            ],
        ),
        migrations.CreateModel(
            name='ProduceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('isActive', models.BooleanField()),
                ('slug', models.SlugField(blank=True, default='', max_length=150, unique=True)),
                ('business', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='easymanagement.business')),
            ],
        ),
        migrations.AddField(
            model_name='produce',
            name='produceType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='easymanagement.producetype'),
        ),
        migrations.CreateModel(
            name='WebSocketGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('business', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='easymanagement.business')),
                ('desk', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='easymanagement.desk')),
                ('users', models.ManyToManyField(related_name='websocket_groups', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
